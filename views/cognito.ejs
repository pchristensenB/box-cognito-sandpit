function showBoxUI(boxAccessToken) {
    console.log("tok:" + boxAccessToken)
    $(".view").hide();
    var folderId = '0';
    var contentExplorer = new Box.ContentExplorer();
    contentExplorer.show(folderId, boxAccessToken, {
        container: '#app-container',
        logoUrl: 'box',
        contentPreviewProps: {
          contentSidebarProps: {
            detailsSidebarProps: {
              hasNotices: true,
              hasProperties: true,
              hasAccessStats: true,
              hasVersions: true
            },
            hasActivityFeed: true,
            hasSkills: true,
            hasMetadata: true
          }
        }
    })

    $("#app-container").height(800);
    $(".collapsible").show();
    var coll = document.getElementsByClassName("collapsible");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
                $("#userinfo").text("Show user info");
            } else {
                content.style.display = "block";
                $("#userinfo").text("Hide user info");
            }
        });
    }
    $("#app-container").show();
    $("#myModal").toggle();
    $(".load").hide();
}
// Operations when the web page is loaded.
$(document).ready(function() {
    $("#imagemodal").toggle();
    $("#popreg").on("click", function () {
        $('#license').hide();
        $('#imagepreview').show();
        $('#imagepreview').attr('src', '/img/register.png');
        $('#imagemodal').modal('show'); // imagemodal is the id attribute assigned to the bootstrap modal, then i use the show function
    });
    $("#poplog").on("click", function () {
        $('#license').hide();
        $('#imagepreview').show();
        $('#imagepreview').attr('src', '/img/login.png');
        $('#imagemodal').modal('show'); // imagemodal is the id attribute assigned to the bootstrap modal, then i use the show function
    });
    $("#lic").on("click", function () {
        $('#license').show();
        $('#imagepreview').hide();
        $('#license').html(''+ 
        'Copyright 2022 Peter Christensen<br/>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:' + 
        '</br>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</br>' + 
        'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.');
        $('#imagemodal').modal('show'); // imagemodal is the id attribute assigned to the bootstrap modal, then i use the show function
    });
    $(".tab-pane").hide();;
    $("#statusNotAuth").hide();
    $("#statusAuth").hide();
    // Initiatlize CognitoAuth object
    var auth = initCognitoSDK();
    $("#signInButton").click( function () {
        var state = $('#signInButton').text();
        console.log(state);
        if (state=='Login/Register') {
            userButton(auth);
        }
        else {
            auth.signOut();
            //showSignedOut();
        }
    });
    var curUrl = window.location.href;
    auth.parseCognitoWebResponse(curUrl);
});
// Perform user operations.
function userButton(auth) {
    var state = $('#signInButton').text();
    if (state === "Sign Out") {
        $("#signInButton").text("Login/Register");
        auth.signOut();
        showSignedOut();
    } else {
        //auth.getSession();
        window.location.href = 'https://<%=cognitoAppDomain%>/login?client_id=<%=cognitoClientId%>&response_type=token&scope=email+openid&redirect_uri=<%=cognitoRedirectUrl%>';
    }
}

// Operations when signed in.
function showSignedIn(session) {
    console.log("calling signed out")
    $("#statusNotAuth").hide();
    $("#statusAuth").show();
    $("#signInButton").text("Sign Out");
}

// Operations when signed out.
function showSignedOut() {
    $("#statusNotAuth").show();
    $("#statusAuth").hide();
    closeTab("userdetails");
}

// Initialize a cognito auth object.
function initCognitoSDK() {
    var authData = {
        ClientId: '<%=cognitoClientId%>', // Your client id here
        AppWebDomain: '<%=cognitoAppDomain%>', // Exclude the "https://" part. 
        TokenScopesArray: ['email', 'openid'], // like ['openid','email','phone']...
        RedirectUriSignIn: location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : ''),
        RedirectUriSignOut: location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : ''),
        IdentityProvider: '<%=cognitoIdentityProvider%>',
        UserPoolId: '<%=cognitoUserPoolId%>',
        AdvancedSecurityDataCollectionFlag: false
    };
    var auth = new AmazonCognitoIdentity.CognitoAuth(authData);
    // You can also set state parameter 
    // auth.setState(<state parameter>);  
    auth.userhandler = {
        onSuccess: function (result) {
            showSignedIn(result);
            $(".view").hide();
            $(".load").html("<img src='https://pcboxdemo.github.io/load.gif'/>").show();
            getBoxToken(result);
            showSignedIn();
            $("#signInButton").text("Sign Out");
        },
        onFailure: function (err) {
            alert("Error!" + err);
        }
    };
    return auth;
}
function getBoxToken(cognitoAccess) {
    $.post("/boxUI", { accessToken: cognitoAccess.accessToken.jwtToken, idToken: cognitoAccess.idToken.jwtToken }, function (json) {
        boxAccessToken = json.accessToken;
        console.log("boxToken:"+boxAccessToken);
        //If app user creation delayed, wait 5 seconds and relaod
        if(!boxAccessToken) {
            setTimeout(function(){
                window.location.reload(1);
             }, 5000);
        }
        else {
            showBoxUI(boxAccessToken);
            
            $("#user").append("Cognito User:" + json.userName).append("<br/>");
            $("#user").append("Cognito Email:" + json.email).append("<br/>");
            $("#user").append("Cognito ID:" + json.cognitoId).append("<br/>");
            $("#user").append("Box User ID:" + json.boxId).append("<br/>");
            $("#user").append("Box external app user ID:" + json.extId).append("<br/>");
            $("#user").append("Box User Name:" + json.userName).append("<br/>");
            $("#user").append("Box User Login:" + json.login).append("<br/>");
        }

    });
}
